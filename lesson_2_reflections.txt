--What happens when you initialize a repository? Why do you need to do it?
it creates an empty repository and a meta data file .git.we want to group 
related files and put them inside of the same repository
--How is the staging area different from the working directory and the 
repository? What value do you think it offers?
it is helpful to commit all the files at the same time. since it is better
to have a logical change for every add we use one add command for every change
but in commit we commit all of them at the same time.
--How can you use the staging area to make sure you have one commit per logical change?
one add per logical change
--What are some situations when branches would be helpful in keeping your 
history organized? How would branches help?
When you want to implement more than one scenario on your codes, or
you want to add new different features separately, or you want to fix 
a bug or etc, you can use git branch. git branch helps to save the 
master one safe and still be bale to add new features.
--How do the diagrams help you visualize the branch structure?
it shows parents and children of every commit and branch.
--What is the result of merging two branches together? Why do we represent it in the diagram 
the way we do?
we merge all commits of both branches into one branch.Because we delete one of them and we 
keep the other one.
--What are the pros and cons of Git’s automatic merging vs. always doing merges manually?
Automatic merging does it faster and easier for users but it is possible to face
conflicts that it loses its benefits and we have to turn back to manual one.